//This code was generated by a tool as of 2007-06-10 22:42:38.734.

using System;
using System.Collections;
using Wilson.ORMapper;

namespace SimatSoft.DB.ORM
{
	public class AssetTransferHD : IObjectHelper, IObjectNotification
	{
		private string transferID;
		private string transferType;
		private string fromDeptID;
		private string toDeptID;
		private DateTime transferDate;
		private string userName;
		private string remark;
		private string fromFacCode;
		private string toFacCode;
		private string transferFlag;
		private string statusID;
		private IList assetTransfers; // Supports both ObjectSet and Lazy-Loaded ObjectList
		private IList assetTransferDTs; // Supports both ObjectSet and Lazy-Loaded ObjectList
        private IList assetTransferSerials; // Supports both ObjectSet and Lazy-Loaded ObjectList

		public string TransferID
		{
			get { return this.transferID; }
            set { this.transferID = value; }
		}

		public string TransferType
		{
			get { return this.transferType; }
			set { this.transferType = value; }
		}

		public string FromDeptID
		{
			get { return this.fromDeptID; }
			set { this.fromDeptID = value; }
		}

		public string ToDeptID
		{
			get { return this.toDeptID; }
			set { this.toDeptID = value; }
		}

		public DateTime TransferDate
		{
			get { return this.transferDate; }
			set { this.transferDate = value; }
		}

		public string UserName
		{
			get { return this.userName; }
			set { this.userName = value; }
		}

		public string Remark
		{
			get { return this.remark; }
			set { this.remark = value; }
		}

		public string FromFacCode
		{
			get { return this.fromFacCode; }
			set { this.fromFacCode = value; }
		}

		public string ToFacCode
		{
			get { return this.toFacCode; }
			set { this.toFacCode = value; }
		}

		public string TransferFlag
		{
			get { return this.transferFlag; }
			set { this.transferFlag = value; }
		}

		public string StatusID
		{
			get { return this.statusID; }
			set { this.statusID = value; }
		}

		public IList AssetTransfers
		{
			get { return this.assetTransfers; }
		}

		public IList AssetTransferDTs
		{
			get { return this.assetTransferDTs; }
		}

        public IList AssetTransferSerials
        {
            get { return this.assetTransferSerials; }
        }


		#region IObjectHelper Members
		public object this[string memberName]
		{
			get {
				switch (memberName) {
					case "transferID": return this.transferID;
					case "transferType": return this.transferType;
					case "fromDeptID": return this.fromDeptID;
					case "toDeptID": return this.toDeptID;
					case "transferDate": return this.transferDate;
					case "userName": return this.userName;
					case "remark": return this.remark;
					case "fromFacCode": return this.fromFacCode;
					case "toFacCode": return this.toFacCode;
					case "transferFlag": return this.transferFlag;
					case "statusID": return this.statusID;
					case "assetTransfers": return this.assetTransfers;
					case "assetTransferDTs": return this.assetTransferDTs;
                    case "assetTransferSerials": return this.assetTransferSerials;
                    default: throw new Exception("Invalid Member");
				}
			}
			set {
				switch (memberName) {
					case "transferID": this.transferID = (string) value; break;
					case "transferType": this.transferType = (string) value; break;
					case "fromDeptID": this.fromDeptID = (string) value; break;
					case "toDeptID": this.toDeptID = (string) value; break;
					case "transferDate": this.transferDate = (DateTime) value; break;
					case "userName": this.userName = (string) value; break;
					case "remark": this.remark = (string) value; break;
					case "fromFacCode": this.fromFacCode = (string) value; break;
					case "toFacCode": this.toFacCode = (string) value; break;
					case "transferFlag": this.transferFlag = (string) value; break;
					case "statusID": this.statusID = (string) value; break;
					case "assetTransfers": this.assetTransfers = (IList) value; break;
					case "assetTransferDTs": this.assetTransferDTs = (IList) value; break;
                    case "assetTransferSerials": this.assetTransferSerials = (IList)value; break;
                    default: throw new Exception("Invalid Member");
				}
			}
		}
		#endregion

		#region IObjectNotification Members
		public void OnCreated(Transaction transaction)
		{
			// TODO
		}

		public void OnCreating(Transaction transaction)
		{
			// TODO
		}

		public void OnDeleted(Transaction transaction)
		{
			// TODO
		}

		public void OnDeleting(Transaction transaction)
		{
			// TODO
		}

		public void OnMaterialized(System.Data.IDataRecord dataRecord)
		{
			// TODO
		}

		public void OnPersistError(Transaction transaction, Exception exception)
		{
			// TODO
		}

		public void OnUpdated(Transaction transaction)
		{
			// TODO
		}

		public void OnUpdating(Transaction transaction)
		{
			// TODO
		}
		#endregion
	}
}
