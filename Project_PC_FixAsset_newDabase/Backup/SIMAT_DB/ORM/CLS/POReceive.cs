//This code was generated by a tool as of 2007-06-07 17:24:40.937.

using System;
using System.Collections;
using Wilson.ORMapper;

namespace SimatSoft.DB.ORM
{
	public class POReceive : IObjectHelper, IObjectNotification
	{
		private string poid;
		private string vendorID;
		private string pOType;
		private string modelID;
		private int pOSeq;
		private int qty;
		private decimal pOPrice;
		private decimal pOCost;
		private DateTime createdDate;
		private string userName;
		private string facCode;
		private string remark;
		private Podt podtObject; // Strongly Type as Podt if not Lazy-Loading
		private Pohd pohdObject; // Strongly Type as Pohd if not Lazy-Loading
		private IList assetReceives; // Supports both ObjectSet and Lazy-Loaded ObjectList
		

		public string Poid
		{
			get { return this.poid; }
            set { this.poid = value; }
		}

		public string VendorID
		{
			get { return this.vendorID; }
			set { this.vendorID = value; }
		}

		public string POType
		{
			get { return this.pOType; }
			set { this.pOType = value; }
		}

		public string ModelID
		{
			get { return this.modelID; }
			set { this.modelID = value; }
		}

		public int POSeq
		{
			get { return this.pOSeq; }
			set { this.pOSeq = value; }
		}

		public int Qty
		{
			get { return this.qty; }
			set { this.qty = value; }
		}

		public decimal POPrice
		{
			get { return this.pOPrice; }
			set { this.pOPrice = value; }
		}

		public decimal POCost
		{
			get { return this.pOCost; }
			set { this.pOCost = value; }
		}

		public DateTime CreatedDate
		{
			get { return this.createdDate; }
			set { this.createdDate = value; }
		}

		public string UserName
		{
			get { return this.userName; }
			set { this.userName = value; }
		}

		public string FacCode
		{
			get { return this.facCode; }
			set { this.facCode = value; }
		}

		public string Remark
		{
			get { return this.remark; }
			set { this.remark = value; }
		}

		// Return the primary key property from the primary key object
		public Podt PodtObject
		{
			get { return this.podtObject; }
		}

		

		// Return the primary key property from the primary key object
		public Pohd PohdObject
		{
			get { return this.pohdObject; }
		}

		public IList AssetReceives
		{
			get { return this.assetReceives; }
		}

	


		#region IObjectHelper Members
		public object this[string memberName]
		{
			get {
				switch (memberName) {
					case "poid": return this.poid;
					case "vendorID": return this.vendorID;
					case "pOType": return this.pOType;
					case "modelID": return this.modelID;
					case "pOSeq": return this.pOSeq;
					case "qty": return this.qty;
					case "pOPrice": return this.pOPrice;
					case "pOCost": return this.pOCost;
					case "createdDate": return this.createdDate;
					case "userName": return this.userName;
					case "facCode": return this.facCode;
					case "remark": return this.remark;
					case "podtObject": return this.podtObject;
					case "pohdObject": return this.pohdObject;
					case "assetReceives": return this.assetReceives;
					default: throw new Exception("Invalid Member");
				}
			}
			set {
				switch (memberName) {
					case "poid": this.poid = (string) value; break;
					case "vendorID": this.vendorID = (string) value; break;
					case "pOType": this.pOType = (string) value; break;
					case "modelID": this.modelID = (string) value; break;
					case "pOSeq": this.pOSeq = (int) value; break;
					case "qty": this.qty = (int) value; break;
					case "pOPrice": this.pOPrice = (decimal) value; break;
					case "pOCost": this.pOCost = (decimal) value; break;
					case "createdDate": this.createdDate = (DateTime) value; break;
					case "userName": this.userName = (string) value; break;
					case "facCode": this.facCode = (string) value; break;
					case "remark": this.remark = (string) value; break;
					case "podtObject": this.podtObject = (Podt) value; break;
					case "pohdObject": this.pohdObject = (Pohd) value; break;
					case "assetReceives": this.assetReceives = (IList) value; break;
					default: throw new Exception("Invalid Member");
				}
			}
		}
		#endregion

		#region IObjectNotification Members
		public void OnCreated(Transaction transaction)
		{
			// TODO
		}

		public void OnCreating(Transaction transaction)
		{
			// TODO
		}

		public void OnDeleted(Transaction transaction)
		{
			// TODO
		}

		public void OnDeleting(Transaction transaction)
		{
			// TODO
		}

		public void OnMaterialized(System.Data.IDataRecord dataRecord)
		{
			// TODO
		}

		public void OnPersistError(Transaction transaction, Exception exception)
		{
			// TODO
		}

		public void OnUpdated(Transaction transaction)
		{
			// TODO
		}

		public void OnUpdating(Transaction transaction)
		{
			// TODO
		}
		#endregion
	}
}
